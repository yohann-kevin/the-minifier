#!/usr/bin/env node
// -*- js -*-

const commandLineUsage = require('command-line-usage');
const commandLineArgs = require('command-line-args');
const dirTree = require("directory-tree");

// path for development mode
const { minifierCommandLine } = require('../index.js');

const optionList = [
  {
    name: 'all',
    alias: 'a',
    defaultOption: true,
    typeLabel: '{underline string}',
    description: '📝 Minify all project',
  },
  {
    name: 'css',
    alias: 'c',
    type: String,
    description: '🖌️  Minify all project css'
  },
  {
    name: 'html',
    alias: 'w',
    type: String,
    description: '🌐 Minify all project html'
  },
  {
    name: 'javascript',
    alias: 'j',
    type: String,
    description: '🚂 Minify all project javascript'
  }
];

const usageNotes = [
  {
    header: '🗜️  Minify html, css and javascript',
    content: 'A light library to minify javascript, css and html easily'
  },
  {
    header: '⚙️  Options ⚙️',
    optionList: optionList
  }
];

const usage = commandLineUsage(usageNotes);
let options = null;
let cssFilesPath = [];

try {
    options = commandLineArgs(optionList);
} catch(e) {
  console.log(e);
  console.log(usage);
  return;
}

if (Object.keys(options).length === 0 || options.help) {
  console.log(usage)
  return;
} else {
  initArgsValue();
}

function initArgsValue() {
  for (const arg in options) options[arg] = true;
  manageArgAll();
}

function manageArgAll() {
  if (options.all) {
    options.html = true;
    options.css = true;
    options.javascirpt = true;
  }

  searchPathFile();
}

function searchPathFile() {
  const projectPath = dirTree('./');

  if (options.css) {
    searchCssFile(projectPath);
    options.cssPath = cssFilesPath;
  }
  
  minifierCommandLine(options);
}

function searchCssFile(allPath) {
  allPath.children.forEach((folderAndFiles) => {
    if (folderAndFiles.name != 'node_modules' && folderAndFiles.name != '.git') {
      if(Object.keys(folderAndFiles).length == 2) {
        const filesName = folderAndFiles.name.split('.')
        const filesExtension = filesName[filesName.length - 1];
        if (filesExtension === 'css') cssFilesPath.push(folderAndFiles.path);
      } else {
        searchCssFile(folderAndFiles);
      }
    }
  });
}
